#!/usr/bin/env python2
#
# src/contracts.py - implement the /contracts resource
#
# Copyright 2015, 2016 Suomen Tilaajavastuu Oy
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import qvarn
from qvarn._compat import buffer


resource_type = u'contract'


contract_prototype_v0 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
}


contract_prototype_v1 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'contacts': [
                {
                    u'contact_type': u'',
                    u'contact_source': u'',
                    u'contact_timestamp': u'',
                    u'phone_number': u'',
                    u'email_address': u'',
                    u'full_address': u'',
                    u'country': u'',
                    u'address_lines': [u''],
                    u'post_code': u'',
                    u'post_area': u'',
                },
            ],
            u'username': u'',
            u'user_role': u'',
        },
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_prototype_v2 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'contacts': [
                {
                    u'contact_type': u'',
                    u'contact_roles': u'',
                    u'contact_source': u'',
                    u'contact_timestamp': u'',
                    u'phone_number': u'',
                    u'email_address': u'',
                    u'full_address': u'',
                    u'country': u'',
                    u'address_lines': [u''],
                    u'post_code': u'',
                    u'post_area': u'',
                },
            ],
            u'username': u'',
            u'user_role': u'',
        },
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_prototype_v3 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'username': u'',
            u'user_role': u'',
        },
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_prototype_v4 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'username': u'',
            u'user_role': u'',
            u'contacts': [
                {
                    u'contact_type': u'',
                    u'contact_roles': u'',
                    u'contact_source': u'',
                    u'contact_timestamp': u'',
                    u'phone_number': u'',
                    u'email_address': u'',
                    u'full_address': u'',
                    u'country': u'',
                    u'address_lines': [u''],
                    u'post_code': u'',
                    u'post_area': u'',
                },
            ],
        },
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_prototype_v5 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'username': u'',
            u'user_role': u'',
            u'contacts': [
                {
                    u'contact_type': u'',
                    u'contact_roles': u'',
                    u'contact_source': u'',
                    u'contact_timestamp': u'',
                    u'phone_number': u'',
                    u'email_address': u'',
                    u'full_address': u'',
                    u'country': u'',
                    u'address_lines': [u''],
                    u'post_code': u'',
                    u'post_area': u'',
                },
            ],
            u'permissions': [
                {
                    u'permission_name': u'',
                }
            ],
            u'global_permissions': [
                {
                    u'permission_name': u'',
                }
            ],
        },
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_prototype_v6 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'username': u'',
            u'user_role': u'',
            u'contacts': [
                {
                    u'contact_type': u'',
                    u'contact_roles': u'',
                    u'contact_source': u'',
                    u'contact_timestamp': u'',
                    u'phone_number': u'',
                    u'email_address': u'',
                    u'full_address': u'',
                    u'country': u'',
                    u'address_lines': [u''],
                    u'post_code': u'',
                    u'post_area': u'',
                },
            ],
            u'permissions': [
                {
                    u'permission_name': u'',
                }
            ],
            u'global_permissions': [
                {
                    u'permission_name': u'',
                }
            ],
        },
    ],
    u'terms_of_service': [
        {
            u'terms_of_service_version': u'',
            u'acceptance_time': u'',
            u'accepter_person_id': u''
        }
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_prototype_current = contract_prototype_v7 = {
    u'type': u'',
    u'id': u'',
    u'revision': u'',
    u'contract_type': u'',
    u'start_date': u'',
    u'end_date': u'',
    u'date_created': u'',
    u'date_updated': u'',
    u'contract_parties': [
        {
            u'type': u'',
            u'resource_id': u'',
            u'role': u'',
            u'username': u'',
            u'user_role': u'',
            u'contacts': [
                {
                    u'contact_type': u'',
                    u'contact_roles': u'',
                    u'contact_source': u'',
                    u'contact_timestamp': u'',
                    u'phone_number': u'',
                    u'email_address': u'',
                    u'full_address': u'',
                    u'country': u'',
                    u'address_lines': [u''],
                    u'post_code': u'',
                    u'post_area': u'',
                },
            ],
            u'permissions': [
                {
                    u'permission_name': u'',
                }
            ],
            u'global_permissions': [
                {
                    u'permission_name': u'',
                }
            ],
        },
    ],
    u'terms_of_service': [
        {
            u'terms_of_service_version': u'',
            u'terms_of_service_language': u'',
            u'acceptance_time': u'',
            u'accepter_person_id': u''
        }
    ],
    u'right_to_work_based_on': u'',
    u'id06_issuer_requires_bankid': False,
    u'id06_contact_name': u'',
    u'id06_contact_email': u'',
    u'contract_state': u'',
    u'preferred_language': u'',
    u'contract_state_history': [
        {
            u'state': u'',
            u'modified_by': u'',
            u'modification_timestamp': u'',
        },
    ],
    u'signers': [
        {
            u'signer': u'',
            u'signing_request_timestamp': u'',
            u'signing_request_message': u'',
            u'signing_timestamp': u'',
        },
    ],
}


contract_document_prototype = {
    u'body': buffer(b''),
    u'content_type': u'',
}


contract_sync_prototype = {
    u'sync_sources': [
        {
            u'sync_source': u'',
            u'sync_id': u'',
        },
    ],
    u'sync_revision': u'',
}


class InvalidContractType(qvarn.ValidationError):

    msg = u'Contract {id} contract type is invalid'


class InvalidPartyType(qvarn.ValidationError):

    msg = u'Contract {id} contract party party type is invalid'


class InvalidRightToWorkBasedOn(qvarn.ValidationError):

    msg = u'Contract {id} right to work based on is invalid'


def validate_contract(obj):
    allowed_contract_types = [
        u'employment',
        u'induction',
        u'ID06_cards',
        u'SBCC_account',
        u'tilaajavastuu_account',
        u'service_application',
        u'tilaajavastuu_subscription',
        u'taito_subscription'
    ]
    if obj[u'contract_type'] not in allowed_contract_types:
        raise InvalidContractType(id=obj[u'id'])

    if obj[u'contract_type'] == u'employment':
        for party in obj[u'contract_parties']:
            if party[u'role'] not in [u'employer', u'employee']:
                raise InvalidPartyType(id=obj[u'id'])

    if obj[u'contract_type'] == u'induction':
        for party in obj[u'contract_parties']:
            if party[u'role'] not in [u'inductor', u'inductee']:
                raise InvalidPartyType(id=obj[u'id'])

    if obj[u'contract_type'] in (u'tilaajavastuu_account', u'SBCC_account'):
        for party in obj[u'contract_parties']:
            if party[u'role'] not in [u'user', u'target']:
                raise InvalidPartyType(id=obj[u'id'])

    if obj[u'contract_type'] == u'service_application':
        for party in obj[u'contract_parties']:
            if party[u'role'] not in [u'applicant', u'target']:
                raise InvalidPartyType(id=obj[u'id'])

    if obj[u'contract_type'] == u'ID06_cards':
        # We accept any values for ID06_cards, at least for now.
        pass

    if obj[u'contract_type'] in (
            u'tilaajavastuu_subscription',
            u'taito_subscription'):
        for party in obj[u'contract_parties']:
            if party[u'role'] not in [u'customer']:
                raise InvalidPartyType(id=obj[u'id'])

    if (obj[u'contract_type'] == u'employment' or
            obj[u'contract_type'] == u'induction'):
        allowed_rights = [u'eea_citizen', u'residence_permit', u'other']
        if obj[u'right_to_work_based_on'] not in allowed_rights:
            raise InvalidRightToWorkBasedOn(id=obj[u'id'])


resource_type_spec = {
    u'path': u'/contracts',
    u'type': u'contract',
    u'versions': [
        {
            u'version': u'v0',
            u'prototype': contract_prototype_v0,
        },
        {
            u'version': u'v1',
            u'prototype': contract_prototype_v1,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
        },
        {
            u'version': u'v2',
            u'prototype': contract_prototype_v2,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
        },
        {
            u'version': u'v3',
            u'prototype': contract_prototype_v3,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
        },
        {
            u'version': u'v4',
            u'prototype': contract_prototype_v4,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
        },
        {
            u'version': u'v5',
            u'prototype': contract_prototype_v5,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
            u'validator': validate_contract,
        },
        {
            u'version': u'v6',
            u'prototype': contract_prototype_v6,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
            u'validator': validate_contract,
        },
        {
            u'version': u'v7',
            u'prototype': contract_prototype_v7,
            u'subpaths': {
                u'document': {
                    u'prototype': contract_document_prototype,
                },
                u'sync': {
                    u'prototype': contract_sync_prototype,
                },
            },
            u'files': [
                u'document',
            ],
            u'validator': validate_contract,
        },
    ],
}


application = qvarn.create_resource_server(resource_type_spec)
