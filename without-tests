# Copyright 2015, 2016 Suomen Tilaajavastuu Oy
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# This file lists Python modules that DO NOT have corresponding unit
# test modules (foo_tests.py).


# The Python build script. It makes no sense to have unit tests for
# this.
setup.py

# The module namespace file. It makes no sense to have unit tests for
# this.
qvarn/__init__.py

# The database abstraction layer. This is meant to be simple and obvious
# enough that unit tests are not needed.
qvarn/sql.py

# The backend application main program. This does things like parsing
# the command line or starting the HTTP server. These are things that
# do not benefit much from unit tests, and are better tested by system
# level tests, to avoid having to mock the universe.
qvarn/backend_app.py

# Classes for different resources.
# These don't do enough things that make sense to unit test. These get
# tested properly by system level tests, especially the API test suite.
qvarn/list_resource.py
qvarn/simple_resource.py
qvarn/listener_resource.py
qvarn/file_resource.py

# This only logs an HTTP request. That's something that it doesn't make a lot
# sense to unit test (it'd just require mocking and verifying that the right
# log function gets called, and that's not worth the effort).
qvarn/logging_plugin.py

# TODO
qvarn/basic_validation_plugin.py
qvarn/error_transform_plugin.py

# A very simple class that got written without unit tests. Might be
# worthwhile to remove
qvarn/measurement.py

# Does not contain much logic, logic is mostly separated to AuthValidator and
# util.py
qvarn/authorization_plugin.py

# This is mainly tying up other classes, not easily unit tested.
qvarn/resource_server.py

# Contains only subclasses of QvarnException that don't add any additional
# functionality.
qvarn/http_statuses.py

# Contains version number.
qvarn/version.py

# Python 3 compatibility shim
qvarn/_compat.py
